<?xml version="1.0"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns:iq="http://www.garmin.com/xml/connectiq"
           elementFormDefault="qualified">

    <!-- A type definition that will match a hex or decimal number -->
    <xs:simpleType name="hexOrDecimalNumber">
        <xs:restriction base="xs:string">
            <xs:pattern value="(0x)?[0-9A-Fa-f]+|[0-9]+" />
        </xs:restriction>
    </xs:simpleType>

    <!-- A type definition that will match any of the application scopes -->
    <xs:simpleType name="scopeOptions">
        <xs:union memberTypes="scopeEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="scopeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="background"/>
            <xs:enumeration value="glance"/>
            <xs:enumeration value="application"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- A type definition that will match any of the application scopes or the settings scope -->
    <xs:simpleType name="stringScopeOptions">
        <xs:union memberTypes="scopeEnum settingScopeEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="settingScopeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="settings"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- A type definition that will match any of the application scopes for UI elements -->
    <xs:simpleType name="uiScopeOptions">
        <xs:union memberTypes="uiScopeEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="uiScopeEnum">
        <xs:restriction base="xs:string">
          <xs:enumeration value="glance"/>
          <xs:enumeration value="application"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- <string> Definition -->
    <xs:complexType name="stringType" mixed="true">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="id" type="xs:string" use="required" />
                <xs:attribute name="scope" type="stringScopeOptions" use="optional"/>
                <xs:attribute name="translatable" type="xs:boolean" use="optional" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- <font> Definition -->
    <xs:complexType name="fontType">
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="filename" type="xs:string" use="optional" />
        <xs:attribute name="filter" type="xs:string" use="optional" />
        <xs:attribute name="antialias" type="xs:boolean" use="optional" />
        <xs:attribute name="scope" type="uiScopeOptions" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <palette> Definition -->
    <xs:complexType name="paletteType">
        <xs:sequence>
            <xs:element name="color" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="disableTransparency" type="xs:boolean" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <bitmap> Definition -->
    <xs:complexType name="bitmapType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="palette" type="paletteType" /> <!-- A single occurrence is enforced by the compiler -->
            <xs:element name="param" type="paramType" />
        </xs:choice>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="filename" type="xs:string" use="optional" />
        <xs:attribute name="automaticPalette" type="xs:boolean" use="optional" />
        <xs:attribute name="dithering" type="ditheringOptions" use="optional" />
        <xs:attribute name="paletteIntensity" type="xs:decimal" use="optional" />
        <xs:attribute name="x" type="xOptions" use="optional" />
        <xs:attribute name="y" type="yOptions" use="optional" />
        <xs:attribute name="class" type="xs:string" use="optional" />
        <xs:attribute name="compress" type="xs:boolean" use="optional" />
        <xs:attribute name="scope" type="scopeOptions" use="optional" />
        <xs:attribute name="scaleX" type="xs:string" use="optional" />
        <xs:attribute name="scaleY" type="xs:string" use="optional" />
        <xs:attribute name="scaleRelativeTo" type="scaleRelativeToOptions" use="optional" />
        <xs:attribute name="packingFormat" type="packingFormatOptions" use="optional" />
        <xs:attribute name="visible" type="xs:boolean" use="optional" />
        <xs:attribute name="horizontalJustification" type="xJustificationOptions" use="optional" />
        <xs:attribute name="verticalJustification" type="yJustificationOptions" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <bitmap> attribute values -->
    <xs:simpleType name="ditheringOptions">
        <xs:union memberTypes="ditheringEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="ditheringEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="none"/>
            <xs:enumeration value="floyd_steinberg"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="scaleRelativeToOptions">
        <xs:union memberTypes="scaleRelativeToEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="scaleRelativeToEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="screen"/>
            <xs:enumeration value="image"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="packingFormatOptions">
        <xs:union memberTypes="packingFormatEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="packingFormatEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="default"/>
            <xs:enumeration value="yuv"/>
            <xs:enumeration value="png"/>
            <xs:enumeration value="jpg"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- <animation> Definition -->
    <xs:complexType name="animationType" mixed="true">
        <xs:sequence>
            <xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="filename" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <param> Definition -->
    <xs:complexType name="paramType" mixed="true">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="name" type="xs:string" use="required" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- <drawable> Definition -->
    <xs:complexType name="drawableType" mixed="true">
        <xs:sequence>
            <xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="optional" />
        <xs:attribute name="class" type="xs:string" use="optional" />
        <xs:attribute name="visible" type="xs:boolean" use="optional" />
        <xs:attribute name="horizontalJustification" type="xJustificationOptions" use="optional" />
        <xs:attribute name="verticalJustification" type="yJustificationOptions" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- drawable attribute values -->
    <xs:simpleType name="xOptions">
        <xs:union memberTypes="xEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="xEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="center"/>
            <xs:enumeration value="start"/>
            <xs:enumeration value="left"/>
            <xs:enumeration value="right"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="yOptions">
        <xs:union memberTypes="yEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="yEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="center"/>
            <xs:enumeration value="start"/>
            <xs:enumeration value="top"/>
            <xs:enumeration value="bottom"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="xJustificationOptions">
        <xs:union memberTypes="xJustificationEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="xJustificationEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="center"/>
            <xs:enumeration value="left"/>
            <xs:enumeration value="right"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="yJustificationOptions">
        <xs:union memberTypes="yJustificationEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="yJustificationEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="center"/>
            <xs:enumeration value="top"/>
            <xs:enumeration value="bottom"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="dimensionOptions">
        <xs:union memberTypes="dimensionEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="dimensionEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="fill"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- <label> Definition -->
    <xs:complexType name="labelType" mixed="true">
        <xs:sequence>
            <xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="optional" />
        <xs:attribute name="text" type="xs:string" use="optional" />
        <xs:attribute name="font" type="xs:string" use="optional" />
        <xs:attribute name="x" type="xOptions" use="optional" />
        <xs:attribute name="y" type="yOptions" use="optional" />
        <xs:attribute name="justification" type="xs:string" use="optional" />
        <xs:attribute name="color" type="xs:string" use="optional" />
        <xs:attribute name="class" type="xs:string" use="optional" />
        <xs:attribute name="background" type="xs:string" use="optional" />
        <xs:attribute name="visible" type="xs:boolean" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <selectable-state> Definition -->
    <xs:complexType name="selectableStateType">
        <xs:attribute name="id" type="selectableStateIdOptions" use="optional" />
        <xs:attribute name="drawable" type="xs:string" use="optional" />
        <xs:attribute name="color" type="xs:string" use="optional" />
        <xs:attribute name="bitmap" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <selectable-state> id attribute values -->
    <xs:simpleType name="selectableStateIdOptions">
        <xs:union memberTypes="selectableStateIdEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="selectableStateIdEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="stateDefault"/>
            <xs:enumeration value="stateHighlighted"/>
            <xs:enumeration value="stateSelected"/>
            <xs:enumeration value="stateDisabled"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- <selectable> Definition -->
    <xs:complexType name="selectableType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="state" type="selectableStateType" />
            <xs:element name="param" type="paramType" />
        </xs:choice>
        <xs:attribute name="id" type="xs:string" use="optional" />
        <xs:attribute name="x" type="xOptions" use="optional" />
        <xs:attribute name="y" type="yOptions" use="optional" />
        <xs:attribute name="width" type="dimensionOptions" use="optional" />
        <xs:attribute name="height" type="dimensionOptions" use="optional" />
        <xs:attribute name="class" type="xs:string" use="optional" />
        <xs:attribute name="visible" type="xs:boolean" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <text-area> Definition -->
    <xs:complexType name="textAreaType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="fonts" type="fontReferenceListType" />
            <xs:element name="param" type="paramType" />
        </xs:choice>
        <xs:attribute name="id" type="xs:string" use="optional" />
        <xs:attribute name="text" type="xs:string" use="optional" />
        <xs:attribute name="font" type="xs:string" use="optional" />
        <xs:attribute name="x" type="xOptions" use="optional" />
        <xs:attribute name="y" type="yOptions" use="optional" />
        <xs:attribute name="width" type="dimensionOptions" use="optional" />
        <xs:attribute name="height" type="dimensionOptions" use="optional" />
        <xs:attribute name="justification" type="xs:string" use="optional" />
        <xs:attribute name="color" type="xs:string" use="optional" />
        <xs:attribute name="class" type="xs:string" use="optional" />
        <xs:attribute name="background" type="xs:string" use="optional" />
        <xs:attribute name="visible" type="xs:boolean" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <xs:complexType name="fontReferenceListType">
        <xs:sequence>
            <xs:element name="font" type="xs:string" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <exclude> Definition -->
    <xs:complexType name="excludeType">
        <xs:attribute name="file" type="xs:string" use="optional" />
        <xs:attribute name="dir" type="xs:string" use="optional" />
        <xs:attribute name="annotation" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <build> Definition -->
    <xs:complexType name="buildType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="exclude" type="excludeType" />
        </xs:choice>
    </xs:complexType>

    <!-- <button> Definition -->
    <xs:complexType name="buttonType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="state" type="selectableStateType" />
            <xs:element name="param" type="paramType" />
        </xs:choice>
        <xs:attribute name="id" type="xs:string" use="optional" />
        <xs:attribute name="x" type="xOptions" use="optional" />
        <xs:attribute name="y" type="yOptions" use="optional" />
        <xs:attribute name="width" type="dimensionOptions" use="optional" />
        <xs:attribute name="height" type="dimensionOptions" use="optional" />
        <xs:attribute name="behavior" type="xs:string" use="optional" />
        <xs:attribute name="background" type="xs:string" use="optional" />
        <xs:attribute name="visible" type="xs:boolean" use="optional" />
        <xs:attribute name="class" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <layout> Definition -->
    <xs:complexType name="layoutType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="label" type="labelType" />
            <xs:element name="text-area" type="textAreaType" />
            <xs:element name="drawable" type="drawableType" />
            <xs:element name="bitmap" type="bitmapType" />
            <xs:element name="selectable" type="selectableType" />
            <xs:element name="button" type="buttonType" />
        </xs:choice>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="x" type="xOptions" use="optional" />
        <xs:attribute name="y" type="yOptions" use="optional" />
        <xs:attribute name="width" type="dimensionOptions" use="optional" />
        <xs:attribute name="height" type="dimensionOptions" use="optional" />
        <xs:attribute name="foreground" type="xs:string" use="optional" />
        <xs:attribute name="background" type="xs:string" use="optional" />
        <xs:attribute name="scope" type="uiScopeOptions" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <menu-item> Definition -->
    <xs:complexType name="menuItemType" mixed="true">
        <xs:sequence>
            <xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="label" type="xs:string" use="optional" />
        <xs:attribute name="subLabel" type="xs:string" use="optional" />
        <xs:attribute name="icon" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <toggle-menu-item> Definition -->
    <xs:complexType name="toggleMenuItemType" mixed="true">
        <xs:sequence>
            <xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="label" type="xs:string" use="optional" />
        <xs:attribute name="subLabel" type="xs:string" use="optional" />
        <xs:attribute name="disabledSubLabel" type="xs:string" use="optional" />
        <xs:attribute name="checked" type="xs:boolean" use="optional" />
        <xs:attribute name="icon" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <icon-menu-item> Definition -->
    <xs:complexType name="iconMenuItemType" mixed="true">
        <xs:sequence>
            <xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="label" type="xs:string" use="optional" />
        <xs:attribute name="subLabel" type="xs:string" use="optional" />
        <xs:attribute name="icon" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <menu> Definition -->
    <xs:complexType name="menuType" mixed="true">
        <xs:sequence>
            <xs:element name="menu-item" type="menuItemType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="title" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <menu2> Definition -->
    <xs:complexType name="menu2Type" mixed="true">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="menu-item" type="menuItemType" />
            <xs:element name="toggle-menu-item" type="toggleMenuItemType" />
            <xs:element name="icon-menu-item" type="iconMenuItemType" />
            <xs:element name="drawable-title" type="drawableType" />
        </xs:choice>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="title" type="xs:string" use="optional" />
        <xs:attribute name="icon" type="xs:string" use="optional" />
        <xs:attribute name="theme" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
        <xs:attribute name="dividerType" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <checkbox-menu-item> Definition -->
    <xs:complexType name="checkboxMenuItemType" mixed="true">
        <xs:sequence>
            <xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="label" type="xs:string" use="optional" />
        <xs:attribute name="subLabel" type="xs:string" use="optional" />
        <xs:attribute name="checked" type="xs:boolean" use="optional" />
        <xs:attribute name="icon" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <checkbox-menu> Definition -->
    <xs:complexType name="checkboxMenuType" mixed="true">
        <xs:sequence>
            <xs:element name="checkbox-menu-item" type="checkboxMenuItemType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="title" type="xs:string" use="optional" />
        <xs:attribute name="icon" type="xs:string" use="optional" />
        <xs:attribute name="theme" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
        <xs:attribute name="dividerType" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <action-menu> Definition -->
    <xs:complexType name="actionMenuType" mixed="true">
        <xs:sequence>
            <xs:element name="action-menu-item" type="actionMenuItemType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="theme" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <action-menu-item> Definition -->
    <xs:complexType name="actionMenuItemType" mixed="true">
        <xs:sequence>
            <xs:element name="param" type="paramType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="label" type="xs:string" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <shape> Definition -->
    <xs:complexType name="shapeType" mixed="true">
        <xs:attribute name="type" type="shapeTypeOptions" use="optional" />
        <xs:attribute name="x" type="xJustificationOptions" use="optional" />
        <xs:attribute name="y" type="yJustificationOptions" use="optional" />
        <xs:attribute name="points" type="xs:string" use="optional" />
        <xs:attribute name="width" type="dimensionOptions" use="optional" />
        <xs:attribute name="a" type="dimensionOptions" use="optional" />
        <xs:attribute name="b" type="dimensionOptions" use="optional" />
        <xs:attribute name="height" type="dimensionOptions" use="optional" />
        <xs:attribute name="color" type="xs:string" use="optional" />
        <xs:attribute name="corner_radius" type="xs:string" use="optional" />
        <xs:attribute name="radius" type="xs:string" use="optional" />
        <xs:attribute name="border_width" type="xs:string" use="optional" />
        <xs:attribute name="border_color" type="xs:string" use="optional" />
        <xs:attribute name="horizontalJustification" type="xJustificationOptions" use="optional" />
        <xs:attribute name="verticalJustification" type="yJustificationOptions" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <shape> type attribute values -->
    <xs:simpleType name="shapeTypeOptions">
        <xs:union memberTypes="shapeTypeEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="shapeTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="rectangle"/>
            <xs:enumeration value="circle"/>
            <xs:enumeration value="ellipse"/>
            <xs:enumeration value="polygon"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- <drawable-list> Definition -->
    <xs:complexType name="drawableListType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="shape" type="shapeType" />
            <xs:element name="bitmap" type="bitmapType" />
        </xs:choice>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="x" type="coordinateOptions" use="optional" />
        <xs:attribute name="y" type="coordinateOptions" use="optional" />
        <xs:attribute name="width" type="dimensionOptions" use="optional" />
        <xs:attribute name="height" type="dimensionOptions" use="optional" />
        <xs:attribute name="foreground" type="xs:string" use="optional" />
        <xs:attribute name="background" type="xs:string" use="optional" />
        <xs:attribute name="scope" type="uiScopeOptions" use="optional" />
        <xs:attribute name="horizontalJustification" type="xJustificationOptions" use="optional" />
        <xs:attribute name="verticalJustification" type="yJustificationOptions" use="optional" />
        <xs:attribute name="personality" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <drawable-list> x/y attribute values -->
    <xs:simpleType name="coordinateOptions">
        <xs:union memberTypes="coordinateEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="coordinateEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="center"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- <property> Definition -->
    <xs:complexType name="propertyType" mixed="true">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="id" type="xs:string" use="required" />
                <xs:attribute name="type" type="propertyTypeOptions" use="required" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- <property> type attribute values -->
    <xs:simpleType name="propertyTypeOptions">
        <xs:union memberTypes="propertyTypeEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="propertyTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="string"/>
            <xs:enumeration value="number"/>
            <xs:enumeration value="long"/>
            <xs:enumeration value="float"/>
            <xs:enumeration value="double"/>
            <xs:enumeration value="boolean"/>
            <xs:enumeration value="array"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- <listEntry> Definition -->
    <xs:complexType name="listEntryType" mixed="true">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="value" type="xs:string" use="required" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- <settingConfig> Definition -->
    <xs:complexType name="settingConfigType">
        <xs:sequence>
            <xs:element name="listEntry" type="listEntryType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="type" type="settingTypeOptions" use="required" />
        <xs:attribute name="readonly" type="xs:boolean" use="optional" />
        <xs:attribute name="required" type="xs:boolean" use="optional" />
        <xs:attribute name="min" type="xs:string" use="optional" />
        <xs:attribute name="max" type="xs:string" use="optional" />
        <xs:attribute name="maxLength" type="xs:integer" use="optional" />
        <xs:attribute name="errorMessage" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- special <settingConfig> Definition for growable lists -->
    <xs:complexType name="settingListElementConfigType">
        <xs:sequence>
            <xs:element name="listEntry" type="listEntryType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="type" type="settingTypeOptions" use="required" />
        <xs:attribute name="readonly" type="xs:boolean" use="optional" />
        <xs:attribute name="required" type="xs:boolean" use="optional" />
        <xs:attribute name="min" type="xs:string" use="optional" />
        <xs:attribute name="max" type="xs:string" use="optional" />
        <xs:attribute name="maxLength" type="xs:positiveInteger" use="optional" />
        <xs:attribute name="errorMessage" type="xs:string" use="optional" />
        <xs:attribute name="id" type="xs:string" use="optional" />  <!-- new -->
    </xs:complexType>

    <!-- <setting> Definition -->
    <xs:complexType name="settingType">
        <xs:choice minOccurs="1" maxOccurs="unbounded">
            <xs:element name="settingConfig" type="settingConfigType"/>

            <!-- only for top-level growable list settings -->
            <xs:element name="setting" type="settingListElementType"/>
            <xs:element name="defaults" type="settingListDefaultsType"/>
        </xs:choice>
        <xs:attribute name="propertyKey" type="xs:string" use="optional" />
        <xs:attribute name="title" type="xs:string" use="required" />
        <xs:attribute name="prompt" type="xs:string" use="optional" />
        <xs:attribute name="helpUrl" type="xs:string" use="optional" />

        <!-- only for top-level growable list settings -->
        <xs:attribute name="maxLength" type="xs:positiveInteger" use="optional" />
    </xs:complexType>

    <!-- special <setting> Definition for growable lists -->
    <xs:complexType name="settingListElementType">
        <xs:sequence>
            <xs:element name="settingConfig" type="settingListElementConfigType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="title" type="xs:string" use="required" />
        <xs:attribute name="prompt" type="xs:string" use="optional" />
        <xs:attribute name="helpUrl" type="xs:string" use="optional" />
        <xs:attribute name="type" type="propertyTypeOptions" use="required" />
    </xs:complexType>

    <xs:simpleType name="settingTypeOptions">
        <xs:union memberTypes="settingTypeEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="settingTypeEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="list"/>
            <xs:enumeration value="boolean"/>
            <xs:enumeration value="numeric"/>
            <xs:enumeration value="alphaNumeric"/>
            <xs:enumeration value="phone"/>
            <xs:enumeration value="email"/>
            <xs:enumeration value="url"/>
            <xs:enumeration value="date"/>
            <xs:enumeration value="password"/>
            <xs:enumeration value="array"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- <defaults> Definition -->
    <xs:complexType name="settingListDefaultsType">
        <xs:sequence>
            <xs:element name="entry" type="settingListDefaultEntryType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <entry> Definition -->
    <xs:complexType name="settingListDefaultEntryType">
        <xs:sequence>
            <xs:element name="default" type="settingListDefaultValueType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <default> Definition -->
    <xs:complexType name="settingListDefaultValueType" mixed="true">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="id" type="xs:string" use="optional" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- special <setting> Definition for setting groups -->
    <xs:complexType name="settingsGroupType">
        <xs:sequence>
            <xs:element name="setting" type="settingType" minOccurs="1" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required" />
        <xs:attribute name="title" type="xs:string" use="required" />
        <xs:attribute name="description" type="xs:string" use="optional" />
        <xs:attribute name="enableIfTrue" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <fitField> Definition -->
    <xs:complexType name="fitFieldType" mixed="true">
        <xs:attribute name="id" type="hexOrDecimalNumber" use="required" />
        <xs:attribute name="dataLabel" type="xs:string" use="required" />
        <xs:attribute name="unitLabel" type="xs:string" use="required" />
        <xs:attribute name="sortOrder" type="xs:integer" use="required" />

        <xs:attribute name="displayInChart" type="xs:boolean" use="optional" />
        <xs:attribute name="displayInActivitySummary" type="xs:boolean" use="optional" />
        <xs:attribute name="displayInActivityLaps" type="xs:boolean" use="optional" />
        <xs:attribute name="precision" type="xs:integer" use="optional" />
        <xs:attribute name="fillColor" type="xs:string" use="optional" />
        <xs:attribute name="chartTitle" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <jsonData> Definition -->
    <xs:complexType name="jsonDataType" mixed="true">
        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="id" type="xs:string" use="required" />
                <xs:attribute name="filename" type="xs:string" use="optional" />
                <xs:attribute name="scope" type="scopeOptions" use="optional" />
                <xs:attribute name="personality" type="xs:string" use="optional" />
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <!-- <complication> Definition -->
    <xs:complexType name="complicationType">
        <xs:all>
            <xs:element name="range" type="rangeType" minOccurs="0" />
            <xs:element name="faceIt" type="faceItType" minOccurs="0" />
        </xs:all>
        <xs:attribute name="id" type="xs:int" use="required" />
        <xs:attribute name="access" type="accessOptions" use="required" />
        <xs:attribute name="icon" type="xs:string" use="required" />
        <xs:attribute name="shortLabel" type="xs:string" use="optional" />
        <xs:attribute name="longLabel" type="xs:string" use="required" />
        <xs:attribute name="glancePreview" type="xs:boolean" use="optional" />
        <xs:attribute name="units" type="xs:string" use="optional" />
        <xs:attribute name="value" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <complication> access attribute values -->
    <xs:simpleType name="accessOptions">
        <xs:union memberTypes="accessEnum xs:string" />
    </xs:simpleType>
    <xs:simpleType name="accessEnum">
        <xs:restriction base="xs:string">
            <xs:enumeration value="public"/>
            <xs:enumeration value="private"/>
            <xs:enumeration value="protected"/>
        </xs:restriction>
    </xs:simpleType>

    <!-- <range> Definition -->
    <xs:complexType name="rangeType" mixed="true">
        <xs:sequence>
            <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <faceIt> Definition -->
    <xs:complexType name="faceItType" mixed="true">
        <xs:attribute name="defaultText" type="xs:string" use="required" />
    </xs:complexType>

    <!-- <watchface-config> Definition -->
    <xs:complexType name="watchfaceConfigType">
        <xs:all>
            <xs:element name="styles" type="stylesType" minOccurs="0" maxOccurs="1" />
            <xs:element name="data" type="dataType" minOccurs="0" maxOccurs="1" />
            <xs:element name="accentColors" type="colorsType" minOccurs="0" maxOccurs="1" />
            <xs:element name="dataColors" type="colorsType" minOccurs="0" maxOccurs="1" />
        </xs:all>
    </xs:complexType>

    <!-- <styles> Definition -->
    <xs:complexType name="stylesType">
        <xs:sequence>
            <xs:element name="style" type="styleType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <style> Definition -->
    <xs:complexType name="styleType">
        <xs:attribute name="id" type="xs:integer" use="required" />
        <xs:attribute name="label" type="xs:string" use="optional" />
        <xs:attribute name="default" type="xs:boolean" use="optional" />
    </xs:complexType>

    <!-- <data> Definition -->
    <xs:complexType name="dataType">
        <xs:sequence>
            <xs:element name="complication" type="complicationWatchfaceType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <complication> Definition -->
    <xs:complexType name="complicationWatchfaceType">
        <xs:sequence>
            <xs:element name="type" type="complicationTypeWatchfaceType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="id" type="xs:integer" use="required" />
        <xs:attribute name="allowAny" type="xs:boolean" use="optional" />
    </xs:complexType>

    <!-- <type> Definition -->
    <xs:complexType name="complicationTypeWatchfaceType" mixed="true">
        <xs:attribute name="default" type="xs:boolean" use="optional" />
    </xs:complexType>

    <!-- <accentColors>, <dataColors> Definition -->
    <xs:complexType name="colorsType">
        <xs:sequence>
            <xs:element name="color" type="colorType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
        <xs:attribute name="allowAny" type="xs:boolean" use="optional" />
    </xs:complexType>

    <!-- <color> Definition -->
    <xs:complexType name="colorType" mixed="true">
        <xs:attribute name="default" type="xs:boolean" use="optional" />
        <xs:attribute name="label" type="xs:string" use="optional" />
    </xs:complexType>

    <!-- <strings> Definition -->
    <xs:complexType name="stringsListType" mixed="true">
        <xs:sequence>
            <xs:element name="string" type="stringType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <fonts> Definition -->
    <xs:complexType name="fontsListType" mixed="true">
        <xs:sequence>
            <xs:element name="font" type="fontType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <animations> Definition -->
    <xs:complexType name="animationsListType" mixed="true">
        <xs:sequence>
            <xs:element name="animation" type="animationType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <bitmaps> Definition -->
    <xs:complexType name="bitmapsListType" mixed="true">
        <xs:sequence>
            <xs:element name="bitmap" type="bitmapType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <layouts> Definition -->
    <xs:complexType name="layoutsListType" mixed="true">
        <xs:sequence>
            <xs:element name="layout" type="layoutType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <menus> Definition -->
    <xs:complexType name="menusListType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="menu" type="menuType" />
            <xs:element name="menu2" type="menu2Type" />
            <xs:element name="checkbox-menu" type="checkboxMenuType" />
            <xs:element name="action-menu" type="actionMenuType" />
        </xs:choice>
    </xs:complexType>

    <!-- <drawables> Definition -->
    <xs:complexType name="drawablesListType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="drawable-list" type="drawableListType" />
            <xs:element name="bitmap" type="bitmapType" />
        </xs:choice>
    </xs:complexType>

    <!-- <properties> Definition -->
    <xs:complexType name="propertiesListType">
        <xs:sequence>
            <xs:element name="property" type="propertyType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <settings> Definition -->
    <xs:complexType name="settingsListType">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="setting" type="settingType" />
            <xs:element name="group" type="settingsGroupType" />
        </xs:choice>
        <xs:attribute name="liveValidation" type="xs:boolean" use="optional" />
    </xs:complexType>

    <!-- <fitContributions> Definition -->
    <xs:complexType name="fitContributionsType">
        <xs:sequence>
            <xs:element name="fitField" type="fitFieldType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <jsonDataResourcesType> Definition -->
    <xs:complexType name="jsonDataResourcesType" mixed="true">
        <xs:sequence>
            <xs:element name="jsonData" type="jsonDataType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <complications> Definition -->
    <xs:complexType name="complicationsListType">
        <xs:sequence>
            <xs:element name="complication" type="complicationType" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <!-- <resources> Definition -->
    <xs:complexType name="resourcesListType" mixed="true">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="strings" type="stringsListType" />
            <xs:element name="fonts" type="fontsListType" />
            <xs:element name="animations" type="animationsListType" />
            <xs:element name="bitmaps" type="bitmapsListType" />
            <xs:element name="layouts" type="layoutsListType" />
            <xs:element name="menus" type="menusListType" />
            <xs:element name="drawables" type="drawablesListType" />
            <xs:element name="properties" type="propertiesListType" />
            <xs:element name="settings" type="settingsListType" />
            <xs:element name="fitContributions" type="fitContributionsType" />
            <xs:element name="jsonDataResources" type="jsonDataResourcesType" />
            <xs:element name="complications" type="complicationsListType" />
            <xs:element name="watchface-config" type="watchfaceConfigType" />

            <xs:element name="string" type="stringType" />
            <xs:element name="font" type="fontType" />
            <xs:element name="animation" type="animationType" />
            <xs:element name="bitmap" type="bitmapType" />
            <xs:element name="layout" type="layoutType" />
            <xs:element name="menu" type="menuType" />
            <xs:element name="menu2" type="menu2Type" />
            <xs:element name="checkbox-menu" type="checkboxMenuType" />
            <xs:element name="action-menu" type="actionMenuType" />
            <xs:element name="drawable-list" type="drawableListType" />
            <xs:element name="property" type="propertyType" />
            <xs:element name="setting" type="settingType" />
            <xs:element name="fitField" type="fitFieldType" />
            <xs:element name="build" type="buildType" />
            <xs:element name="jsonData" type="jsonDataType" />
        </xs:choice>
    </xs:complexType>

    <xs:element name="resources" type="resourcesListType" />
    <xs:element name="strings" type="stringsListType" />
    <xs:element name="fonts" type="fontsListType" />
    <xs:element name="animations" type="animationsListType" />
    <xs:element name="bitmaps" type="bitmapsListType" />
    <xs:element name="layouts" type="layoutsListType" />
    <xs:element name="menus" type="menusListType" />
    <xs:element name="drawables" type="drawablesListType" />
    <xs:element name="properties" type="propertiesListType" />
    <xs:element name="settings" type="settingsListType" />
    <xs:element name="fitContributions" type="fitContributionsType" />
    <xs:element name="jsonDataResources" type="jsonDataResourcesType" />
    <xs:element name="complications" type="complicationsListType" />
    <xs:element name="watchface-config" type="watchfaceConfigType" />

    <xs:element name="layout" type="layoutType" />
    <xs:element name="menu" type="menuType" />
    <xs:element name="menu2" type="menu2Type" />
    <xs:element name="checkbox-menu" type="checkboxMenuType" />
    <xs:element name="action-menu" type="actionMenuType" />
    <xs:element name="drawable-list" type="drawableListType" />
    <xs:element name="build" type="buildType" />
</xs:schema>
